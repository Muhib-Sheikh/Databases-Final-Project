import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.Scanner;
import java.util.logging.Level;
import java.util.logging.Logger;

public class DatabaseClass {

	static Scanner scanner = new Scanner(System.in);
	public static String host = "jdbc:mysql://cisvm-winsrv-mysql1.unfcsd.unf.edu:3307/group1";
	//String host2 = "jdbc:mysql://localhost:3306/group1";
	public static String username = "n01442744";
	public static String password = "V22d9569";
	public static String userEmail = null;
	public static String userPass = null;
	public static String adminEmail = null;
	public static String adminPass = null;
	public static int choice = 0;
	static public String userString;
	public static  int idArray[] = {};
	
	public static void main(String[] args) throws ClassNotFoundException {
		
		Class.forName("com.mysql.cj.jdbc.Driver"); 
		
		try {
			Connection con = DriverManager.getConnection(host, username, password);
			System.out.println("Connected to database");
			MainMenu();
			
			
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			System.out.println("Error. Not connected to database.");
			e.printStackTrace();
		}



	}
	
	public static void MainMenu() {
		System.out.println("Enter 1 for User Access and Enter 2 for Admin Access");
		choice = scanner.nextInt();
		
		if (choice == 1) {
			UserAccess();
		}
		
		if(choice == 2) {
			AdminAccess();
		}
	}
	
	public static void AdminAccess() {
		System.out.println("Enter 1 to Locate Title\n"
				+  "Enter 2 to Update Inventory\n"
				+  "Enter 3 to Check User Balance and Late Fees\n"
				+  "Enter 4 to Generate Reports\n"
				+  "Enter 5 to Return");

		choice = scanner.nextInt();
		
		switch (choice) {
		case 1: 
			AdminSearch();
			break;
		case 2: 
			UpdateInventory();
			break;
		case 3:
			CheckUserBal();
			break;
		case 4:
			GenerateReports() ;
			break;
		case 5:
			 MainMenu();
			break;
		default:
			System.out.println("Not A Valid Option");
			AdminAccess();			
			break;
		}
	}
	public static void AdminSearch() {
		Scanner scan = new Scanner(System.in);
		System.out.print("Search by title, genre or author:\n");
		userString = scan.nextLine();
		//System.out.println(userString);
		//System.out.println("WHERE authors.FirstName LIKE \'" + userString + "\' OR authors.LastName LIKE \'" + userString + "\' OR books.Title LIKE \'" + userString + "\' OR books.ISBN LIKE \'" + userString + "\' OR genre.GenreName LIKE \'" + userString + "\'");
		// SQL code here to search tables for books by input.
		String query = "SELECT Title, authors.FirstName, authors.LastName , ISBN, Price, RentalPrice, genre.GenreName, publishers.PublisherName, format.`New/used`, `book format`.BookType , Inventory\r\n" + 
				"FROM books\r\n" + 
				"INNER JOIN `book authors` on `book authors`.BookID = books.BookID\r\n" + 
				"INNER JOIN genre on genre.GenreID = books.GenreID\r\n" + 
				"INNER JOIN publishers on publishers.PublisherID = books.PublisherID\r\n" + 
				"INNER JOIN `format` on format.`FormatID` = books.FormatID\r\n" + 
				"INNER JOIN `book format` on `book format`.BookTypeID = format.`BookTypeID`\r\n" + 
				"INNER JOIN authors on authors.AuthorID = `book authors`.AuthorID\r\n" + 
				"WHERE authors.FirstName LIKE \'" + userString + "\' OR authors.LastName LIKE \'" + userString + "\' OR books.Title LIKE \'"
				+ userString + "\' OR books.ISBN LIKE \'" + userString + "\' OR genre.GenreName LIKE \'" + userString + "\'" +
				"GROUP BY books.Title;";
			
		try (Connection con = DriverManager.getConnection(host, username, password);
                PreparedStatement pst = con.prepareStatement(query);
                ResultSet rs = pst.executeQuery()) {
			String arr[] = {};
			String var1, var2, var3, var4, var5, var6, var7, var8, var9, var10, var11;
			
			System.out.printf("%-40s %-10s %-15s %-15s %-10s %-14s %-30s %-10s %-8s %-15s %-10s %-1s\n","Title","First Name","Last Name","ISBN","Price","Rental Price","Genre","Publisher","Format","Condition","Inv", "");
			while (rs.next()) {
				
				var1 = rs.getString(1);
				var2 = rs.getString(2);
				var3 = rs.getString(3);
				var4 = rs.getString(4);
				var5 = rs.getString(5);
				var6 = rs.getString(6);
				var7 = rs.getString(7);
				var8 = rs.getString(8);
				var9 = rs.getString(9);
				var10 = rs.getString(10);
				var11 = rs.getString(11);
				System.out.printf("%-40s %-10s %-15s %-15s %-10s %-14s %-30s %-10s %-8s %-15s %-10s\n", var1,  var2,  var3,  var4,  var5,  var6,  var7,  var8,  var9,  var10,  var11);
				
				
            }
			
		}catch(SQLException ex) {
			Logger lgr = Logger.getLogger(DatabaseClass.class.getName());
            lgr.log(Level.SEVERE, ex.getMessage(), ex);
		}
		System.out.println();
		System.out.println("1 to Continue Searching\n" + "2 to Return to Menu\n");		
		choice = scan.nextInt();
		if(choice == 1) {
			Search();
		}
		else if(choice == 2) {
			UserAccess();
		}
		else {
			while(choice != 1 || choice != 2) {
				System.out.println("Invalid Option!\n");
				System.out.println("1 to Continue Searching\n" + "2 to Return to Menu\n");
				choice = scan.nextInt();
				if(choice == 1) {
					Search();
				}
				else if(choice == 2) {
					UserAccess();
				}
			}
		}
		
	}//end AdminSearch
	
	public static void UpdateInventory() {
		
	}
	
	public static void CheckUserBal() {
		
	}
	
	public static void GenerateReports() {
		
	}
	
	public static void UserAccess() {
		System.out.println("Enter 1 to Search\n"
				+  "Enter 2 to Checkout(rent)/buy\n"
				+  "Enter 3 for Returns\n"
				+  "Enter 4 to Check/Pay Balance and Late Fees\n"
				+  "Enter 5 to Log In\n"
				+  "Enter 6 to Create Account\n"
				+  "Enter 7 to Return to Main Menu");

		choice = scanner.nextInt();
		
		switch (choice) {
		case 1: 
			Search();
			break;
		case 2: 
			Cart();
			break;
		case 3:
			Return();
			break;
		case 4:
			Balance();
			break;
		case 5:
			LogIn();
			break;
		case 6: 
			CreateAccount();
		case 7:
			MainMenu();
			
		default:
			System.out.println("Not A Valid Option!\n");
			UserAccess();
		}
		
	}// end UserAccess
	
public static void Search() {
		
		Scanner scan = new Scanner(System.in);
		System.out.print("Search by title, genre or author:\n");
		userString = scan.nextLine();
		//System.out.println(userString);
		//System.out.println("WHERE authors.FirstName LIKE \'" + userString + "\' OR authors.LastName LIKE \'" + userString + "\' OR books.Title LIKE \'" + userString + "\' OR books.ISBN LIKE \'" + userString + "\' OR genre.GenreName LIKE \'" + userString + "\'");
		// SQL code here to search tables for books by input.
		String query = "SELECT Title, authors.FirstName, authors.LastName , ISBN, Price, RentalPrice, genre.GenreName, publishers.PublisherName, format.`New/used`, `book format`.BookType , Inventory\r\n" + 
				"FROM books\r\n" + 
				"INNER JOIN `book authors` on `book authors`.BookID = books.BookID\r\n" + 
				"INNER JOIN genre on genre.GenreID = books.GenreID\r\n" + 
				"INNER JOIN publishers on publishers.PublisherID = books.PublisherID\r\n" + 
				"INNER JOIN `format` on format.`FormatID` = books.FormatID\r\n" + 
				"INNER JOIN `book format` on `book format`.BookTypeID = format.`BookTypeID`\r\n" + 
				"INNER JOIN authors on authors.AuthorID = `book authors`.AuthorID\r\n" + 
				"WHERE authors.FirstName LIKE \'" + userString + "\' OR authors.LastName LIKE \'" + userString + "\' OR books.Title LIKE \'"
				+ userString + "\' OR books.ISBN LIKE \'" + userString + "\' OR genre.GenreName LIKE \'" + userString + "\'" +
				"GROUP BY books.Title;";
			
		try (Connection con = DriverManager.getConnection(host, username, password);
                PreparedStatement pst = con.prepareStatement(query);
                ResultSet rs = pst.executeQuery()) {
			String arr[] = {};
			String var1, var2, var3, var4, var5, var6, var7, var8, var9, var10, var11;
			
			System.out.printf("%-40s %-10s %-15s %-15s %-10s %-14s %-30s %-10s %-8s %-15s %-10s %-1s\n","Title","First Name","Last Name","ISBN","Price","Rental Price","Genre","Publisher","Format","Condition","Inv", "");
			while (rs.next()) {
				
				var1 = rs.getString(1);
				var2 = rs.getString(2);
				var3 = rs.getString(3);
				var4 = rs.getString(4);
				var5 = rs.getString(5);
				var6 = rs.getString(6);
				var7 = rs.getString(7);
				var8 = rs.getString(8);
				var9 = rs.getString(9);
				var10 = rs.getString(10);
				var11 = rs.getString(11);
				System.out.printf("%-40s %-10s %-15s %-15s %-10s %-14s %-30s %-10s %-8s %-15s %-10s\n", var1,  var2,  var3,  var4,  var5,  var6,  var7,  var8,  var9,  var10,  var11);
				
            }
			
		}catch(SQLException ex) {
			Logger lgr = Logger.getLogger(DatabaseClass.class.getName());
            lgr.log(Level.SEVERE, ex.getMessage(), ex);
		}
		System.out.println();
		System.out.println("1 to Continue Searching\n" + "2 to Return to Menu\n");		
		choice = scan.nextInt();
		if(choice == 1) {
			Search();
		}
		else if(choice == 2) {
			UserAccess();
		}
		else {
			while(choice != 1 || choice != 2) {
				System.out.println("Invalid Option!\n");
				System.out.println("1 to Continue Searching\n" + "2 to Return to Menu\n");
				choice = scan.nextInt();
				if(choice == 1) {
					Search();
				}
				else if(choice == 2) {
					UserAccess();
				}
			}
		}
				
		// Allow them to add items to shopping cart 
	}// end Search()
	
	public static void Cart() {
		//SELECT
		//lets customers and users look at their current shopping cart.
		//They can rent/purchase from here and also remove
		
String query = "SELECT * FROM `shopping cart`";
		
		try (Connection con = DriverManager.getConnection(host, username, password);
                PreparedStatement pst = con.prepareStatement(query);
                ResultSet rs = pst.executeQuery()) {
			
			while (rs.next()) {
				
                System.out.println(rs.getInt(2)+ "|");
                System.out.println(rs.getString(3)+ "|");
                System.out.println(rs.getInt(4));
                System.out.println(rs.getDouble(6));
            }
			
		}catch(SQLException ex) {
			Logger lgr = Logger.getLogger(DatabaseClass.class.getName());
            lgr.log(Level.SEVERE, ex.getMessage(), ex);
		}
		System.out.println("If you would like to remove an item enter 1\n"
						 + "If you would like to rent/purchase an item enter 2\n"
						 + "To return to menu enter 3\n");
		choice = scanner.nextInt();
			if (choice == 1) {
				System.out.println("Enter the ID of item you would like to remove or 0 to return to cart.");
				choice = scanner.nextInt();
			}
			
			else if (choice == 2) {
				System.out.println("Enter the IDs separated by a space of item you would like to rent/purchase");
				choice = scanner.nextInt();
				/*
				 * for loop to turn each id into a separate element in idArray[]
				 * that way we can use each element to create orders from the cart
				 */
				// ask for payment method if required to go this deep
				// if user has a payment method stored on account don't ask
				//print a receipt
				Cart();
			}
			
			else if (choice == 3) {
				
				UserAccess();
			}
			
			
	}// end Cart()
	
	public static void Return () {
		// DISPLAY Books currently checked out with ID 
		System.out.println("Enter ID of book you would like to return or 0 to return to User Menu");
		choice = scanner.nextInt();
		if (choice == 0) {
			UserAccess();
		}
		//if statement to make sure choice == one of the IDS
		//if choice == ID then set return value to true or 1 then call Return();
		else {
			System.out.println("Enter correct ID");
			Return();
		}
	}	
	public static void Balance () {
		//print balance and late fees
		//let user pay one or both
	}
	
	public static void LogIn() {
		// code to log in
		System.out.println("Email: ");
		userEmail = scanner.nextLine();
		//if userEmail != an email in database then prompt user to enter again
		//else
		System.out.println("Password: ");
		userPass = scanner.nextLine();
		//if userPassword != an email in database then prompt user to enter again
		
	}
	
	public static void CreateAccount () {
		String firstName;
		String lastName;
		String confirmEmail;
		String confirmPass;
		
		//code to create account
		System.out.println("Enter First Name");
			firstName = scanner.nextLine();
		System.out.println("Enter Last Name");
			lastName = scanner.nextLine();
		System.out.println("Enter Email");
			userEmail = scanner.nextLine();
		System.out.println("Confirm Email");
			confirmEmail = scanner.nextLine();
		while (confirmEmail != userEmail)
		{
			System.out.println("One of your values did not match.");
			System.out.println("Enter Email");
			userEmail = scanner.nextLine();
			
			System.out.println("Confirm Email");
			confirmEmail = scanner.nextLine();
		}
		System.out.println("Enter Password");
			userPass = scanner.nextLine();
		System.out.println("Confirm Password");	
			confirmPass = scanner.nextLine();
			
		while (confirmPass != userPass) {
			
			System.out.println("One of your values did not match.");
			System.out.println("Enter Password");
				userPass = scanner.nextLine();
			System.out.println("Confirm Password");	
				confirmPass = scanner.nextLine();
		}
			
		
	}
}//end clientProgram
